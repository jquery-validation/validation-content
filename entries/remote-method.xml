<?xml version="1.0"?>
<entry name="remote" type="method" return="Boolean">
	<title>remote method</title>
	<desc>Requests a resource to check the element for validity.</desc>
	<longdesc>
		The serverside resource is called via jQuery.ajax (XMLHttpRequest) and gets a key/value pair corresponding to the name of the validated element and its value as a GET parameter. The serverside response must be a JSON string that must be <code>"true"</code> for valid elements, and can be <code>"false"</code>, <code>undefined</code>, or <code>null</code> for invalid elements, using the default error message.  If the serverside response is a string, eg. <code>"That name is already taken, try peter123 instead"</code>, this string will be displayed as a custom error message in place of the default.

		<p>For more examples, take a look the <a href="//jqueryvalidation.org/files/demo/marketo">marketo demo</a> and the <a href="//jqueryvalidation.org/files/demo/milk/">milk demo</a>.</p>
	</longdesc>
	<signature>
		<argument name="options" type="Object">
			<desc>
				For the URL of the resource to request for serverside validation (String) or options to fully customize the request, see <a href="https://api.jquery.com/jQuery.ajax">jQuery.ajax</a> for details.
				<p>These options deep-extend the defaults (<code>dataType:"json", data:{nameOfTheElement:valueOfTheElement}</code>). Any options you provide will override the defaults.</p>
			</desc>
		</argument>
	</signature>
	<example>
		<desc>Makes the email field required, an email and does a remote request to check if the given address is already taken.</desc>
		<code><![CDATA[
$( "#myform" ).validate({
  rules: {
    email: {
      required: true,
      email: true,
      remote: "check-email.php"
    }
  }
});
]]></code>
	</example>
	<example>
		<desc>Makes the email field required, an email and does a remote request to check if the given address is already taken. In addition, the http method is set to "post" and the username is sent alongside the email address.</desc>
		<code><![CDATA[
$( "#myform" ).validate({
  rules: {
    email: {
      required: true,
      email: true,
      remote: {
        url: "check-email.php",
        type: "post",
        data: {
          username: function() {
            return $( "#username" ).val();
          }
        }
      }
    }
  }
});
]]></code>
	</example>
	<category slug="methods"/>
</entry>
